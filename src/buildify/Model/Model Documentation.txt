Here's I'm just gonna include a quick written explaination of what's going on, just to keep everyone on the same board. Feel free to edit this document as much as you need.

The purpose of the model level is to turn the widgets created and customized by the user into an XML file. Ideally the program should be able to read the xml file to recreate a saved scene, but I'm not sure how far I can really get with that.

SaveableWidget.java
	I'm thinking it probably makes sense to store all nodes we want to save in here. All widgets will have common attributes, and we can handle saving those common properties at this level.
	Different nodes also have more specific properties that we need to deal with. For example, how do we store the min/max values of a slider? I'm thinking we will need to make many more classes that inherent from SaveableWidget, such as SaveableSlider.
	I'm unsure of how necessary these SaveableWidget classes actually are, so I may drop it. If it's possible to directly turn Node objects into xml, then that's awesome. 

Reader.java
	Currently this is a Nice To Have, I think?
	

Writer.java
	The writer is going to use the library JAXB. Here's a quick explaination for it: http://www.mkyong.com/java/jaxb-hello-world-example/
	
OPEN QUESTIONS:
	1. Do we really need SaveableWidgets? Or can we save Nodes to xml directly?
	2. Is it possible to save a node's private/readonly properties to XML? Many Node properties, like a Label's text for example, are only accessible through Getters and Setters. Here's a potential solution: https://stackoverflow.com/questions/16240734/how-to-marshal-unmarshal-java-objects-with-private-fields-using-jaxb Except Java's node classes don't have xml attributes!!! So this may still be the thing that makes an intermediate class (like SaveableWidget) necessary.